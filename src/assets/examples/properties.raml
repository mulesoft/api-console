#%RAML 1.0
title: API with Types
baseUri: /media

securitySchemes:
  - oauth_2_0:
      type: OAuth 2.0
      describedBy:
        headers:
          Authorization:
            type: string
          car:
            type: object
            properties:
              wheels:
                type: object
                properties:
                  prop1: string
                  prop2: number
              doors:
                type: Door[]
              engine:
                type: Engine | Feet
        queryParameters:
          access_token:
            type: string
        responses:
          404:
            description: Unauthorized
      settings:
        authorizationUri: https://acme.com/login/oauth/authorize
        accessTokenUri: https://acme.com/login/oauth/access_token
        authorizationGrants: [ code ]
types:
  Person:
    type: object
    properties:
      firstname: string
      lastname: string
      age: number
      manager:
        type: Person
  Department:
    type: object
    properties:
      name: string
    example:
      name: Engineering
  User:
    type: Person
    properties:
      firstname:
        type: string
        required: false
      id:
        type: number
      department: Department
  Developer:
    type: User
    properties:
      github: string
  Saadas:
    type: Developer | Person | Department
  Another:
    type: User | Saadas
  Test:
    type: (string | integer)[]
  Door:
    type: string
  Engine:
    type: string
  Feet:
    type: string
  Car:
    type: object
    properties:
      wheels:
        type: object
        properties:
          prop1: string
          prop2: number
      doors:
        type: Door[]
      engine:
        type: Engine | Feet

/test:
  securedBy: [ null, oauth_2_0 ]
  get:
    queryString:
      type: Person

/users/{org}/{id}:
  uriParameters:
    org: string
    id:
      type: object
      properties:
        as: string[]
        temo:
          type: object
          properties:
            st: integer
            adsa: string
  get:
    headers:
      developer:
        type: Person[]
      test:
        type: string
        required: false
        enum: ["one", "two", "three"]
      animal:
        type: Person | Developer
        description: The kind of animal
      car:
        type: object
        properties:
          wheels:
            type: object
            properties:
              prop1: string
              prop2: number
          doors:
            type: Door[]
          engine:
            type: Engine | Feet

    queryParameters:
      developer:
        type: Person[]
      test:
        type: string
        required: false
        enum: ["one", "two", "three"]
      animal:
        type: Person | Developer
        description: The kind of animal
      car:
        type: object
        properties:
          wheels:
            type: string
          doors:
            type: Door[]
          engine:
            type: Engine | Feet
    body:
      application/json:
        type: object
        properties:
          developer:
            type: Person[]
          test:
            type: string
            required: false
            enum: ["one", "two", "three"]
          animal:
            type: Person | Developer
            description: The kind of animal
          car:
            type: object
            properties:
              wheels:
                type: object
                properties:
                  prop1: string
                  prop2: number
              doors:
                type: Door[]
              engine:
                type: Engine | Feet

    responses:
      200:
        headers:
          developer:
            type: Person[]
          test:
            type: string
            required: false
            enum: ["one", "two", "three"]
          animal:
            type: Person | Developer
            description: The kind of animal
          car:
            type: object
            properties:
              wheels:
                type: object
                properties:
                  prop1: string
                  prop2: number
              doors:
                type: Door[]
              engine:
                type: Engine | Feet
        body:
          application/json:
            type: Person

/info:
  post:
    queryString:
      type: object
      properties:
        developer:
          type: Person[]
        test:
          type: string
          required: false
          enum: ["one", "two", "three"]

    body:
      application/json:
        type: object
        properties:
          developer:
            type: Person[]
          test:
            type: string
            required: false
            enum: ["one", "two", "three"]
          animal:
            type: Person | Developer
            description: The kind of animal
          car:
            type: object
            properties:
              wheels:
                type: object
                properties:
                  prop1: string
                  prop2: number
              doors:
                type: Door[]
              engine:
                type: Engine | Feet
